apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx.fullname" . }}
  labels:
    {{- include "nginx.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nginx.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.siteConfig }}
        checksum/server-block-configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.metrics.port }}"
        {{- end }}
      labels:
        {{- include "nginx.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: {{ .Values.health.name }} 
              containerPort: {{ .Values.health.port }}
              protocol: TCP
          volumeMounts:
            - name: nginx-temp
              mountPath: {{ .Values.nginx.tempDir }}
            {{- if .Values.nginx.siteConfig }}
            - name: site-config
              mountPath: /etc/nginx/conf.d
            {{- end }}
            {{- if .Values.nginx.config }}
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.health.name }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.health.name }} 
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx-metrics
          image: "nginx/nginx-prometheus-exporter:latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ['-nginx.scrape-uri', 'http://127.0.0.1:8080/metrics']
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.metrics.resources | nindent 12 }}
      volumes:
        - name: nginx-temp
          emptyDir: {}
        {{- if .Values.nginx.siteConfig }}
        - name: site-config
          configMap:
            name: site-config
        {{- end }}
        {{ if .Values.nginx.config }}
        - name: nginx-config
          configMap:
            name: nginx-config
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
