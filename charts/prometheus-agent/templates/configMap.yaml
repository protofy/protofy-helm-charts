kind: ConfigMap
metadata:
  name: {{ include "prometheus-agent.fullname" . }}
  annotations:
    {{- include "prometheus-agent.commonAnnotations" . | nindent 4 }}
  labels:
    {{- include "prometheus-agent.labels" . | nindent 4 }}
apiVersion: v1
data:
  agent.yaml: |
    server:
      log_level: {{ .Values.server.log_level }}
      log_format: {{ .Values.server.log_format }}

    metrics:
      wal_directory: /var/lib/agent/wal
      wal_cleanup_age: {{ .Values.wal.cleanup_age }}
      wal_cleanup_period: {{ .Values.wal.cleanup_period }}
      global:
        scrape_interval: 15s
        external_labels:
          {{- if .Values.cluster_name }}
          cluster: {{.Values.cluster_name}}
          {{- end }}
          {{- if .Values.environment }}
          environment: {{.Values.environment}}
          {{- end }}
      configs:
        - name: integrations
          wal_truncate_frequency: {{ .Values.wal.truncate_frequency }}
          min_wal_time: {{ .Values.wal.min_time }}
          max_wal_time: {{ .Values.wal.max_time }}
          remote_write:
            {{- range .Values.remote_write }}
            - url: {{ .url }}
              basic_auth:
                username: '{{.basic_auth.username}}'
                password: '{{.basic_auth.password}}'
              {{- if .tenant_id}}
              headers:
                X-Scope-OrgId: '{{.tenant_id}}'
              {{- end }}
              queue_config:
                sample_age_limit: '{{.queue_config.sample_age_limit}}'
            {{- end }}
          scrape_configs:
    {{- if .Values.monitor_kubernetes }}
            - job_name: integrations/kubernetes/cadvisor
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - action: labelmap
                  regex: __meta_kubernetes_node_label_(.+)
                - replacement: kubernetes.default.svc:443
                  target_label: __address__
                - regex: (.+)
                  replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
                  source_labels:
                    - __meta_kubernetes_node_name
                  target_label: __metrics_path__
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes
            - job_name: integrations/kubernetes/kubelet
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - action: labelmap
                  regex: __meta_kubernetes_node_label_(.+)
                - replacement: kubernetes.default.svc:443
                  target_label: __address__
                - regex: (.+)
                  replacement: /api/v1/nodes/$1/proxy/metrics
                  source_labels:
                    - __meta_kubernetes_node_name
                  target_label: __metrics_path__
                - source_labels:
                  - __meta_kubernetes_node_address_ExternalIP
                  action: replace
                  target_label: external_ip
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes
            - job_name: integrations/kubernetes/service-endpoints
              honor_labels: true
              kubernetes_sd_configs:
              - role: endpoints
              relabel_configs:
              - action: keep
                regex: true
                source_labels:
                - __meta_kubernetes_service_annotation_prometheus_io_scrape
              - action: drop
                regex: true
                source_labels:
                - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
              - action: replace
                regex: (https?)
                source_labels:
                - __meta_kubernetes_service_annotation_prometheus_io_scheme
                target_label: __scheme__
              - action: replace
                regex: (.+)
                source_labels:
                - __meta_kubernetes_service_annotation_prometheus_io_path
                target_label: __metrics_path__
              - action: replace
                regex: (.+?)(?::\d+)?;(\d+)
                replacement: $1:$2
                source_labels:
                - __address__
                - __meta_kubernetes_service_annotation_prometheus_io_port
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - action: replace
                source_labels:
                - __meta_kubernetes_namespace
                target_label: namespace
              - action: replace
                source_labels:
                - __meta_kubernetes_service_name
                target_label: service
              - action: replace
                source_labels:
                - __meta_kubernetes_pod_node_name
                target_label: node
            - job_name: "kubelet-probes"
              kubernetes_sd_configs:
                - role: node
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              relabel_configs:
                - action: labelmap
                  regex: __meta_kubernetes_node_label_(.+)
                - target_label: __address__
                  replacement: kubernetes.default.svc:443
                - source_labels: [__meta_kubernetes_node_name]
                  regex: (.+)
                  target_label: __metrics_path__
    {{- end }}
    {{- if .Values.monitor_pods }}
            - job_name: "kubernetes-pods"
              {{- if .Values.bearerAuth}}
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              {{- end }}
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                # Make Scheme configurable by setting prometheus.io/scheme
                - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scheme ]
                  action: replace
                  target_label: __scheme__
                  regex: (https?)
                # Scrape metrics when the prometheus.io/scrape annotation has been set to true
                - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
                  action: keep
                  regex: true
                # Allow us to overwrite the path with the content of prometheus.io/path
                - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                  # Allow us to overwrite the default path with the content of prometheus.io/port
                - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: ${1}:${2}
                  target_label: __address__
                # Expose Pod labels as metric labels
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_app_kubernetes_io_(.+)
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                # Expose Pod namespace as metric namespace label
                - source_labels: [ __meta_kubernetes_namespace ]
                  action: replace
                  target_label: namespace
                # Expose Pod name as metric name label
                - source_labels: [ __meta_kubernetes_pod_name ]
                  action: replace
                  target_label: pod
                {{- if .Values.nameLabelOverride }}
                - source_labels: [ __meta_kubernetes_namespace, __meta_kubernetes_pod_label_{{.Values.nameLabelOverride}}]
                {{- else}}
                - source_labels: [ __meta_kubernetes_namespace, __meta_kubernetes_pod_label_name ]
                {{- end}}
                  action: replace
                  separator: /
                  target_label: job
                  replacement: $1
              scheme: http
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes
    {{- end }}
    {{- if .Values.blackboxTargets }}
            {{- range .Values.blackboxTargets }}
            - job_name: 'blackbox-external-targets-{{.module}}'
              metrics_path: /probe
              params:
                module: [ {{.module}} ]
              static_configs:
                - targets:
                    {{- range .targets }}
                    - {{.}}
                    {{- end}}
              relabel_configs:
                - source_labels: [ __address__ ]
                  target_label: __param_target
                - source_labels: [ __param_target ]
                  target_label: instance
                - target_label: __address__
                  replacement: {{ $.Values.blackboxAddress }}
            {{- end }}
    {{- end }}
