kind: ConfigMap
metadata:
  name: {{ include "prometheus-agent.fullname" . }}
  labels:
    {{- include "prometheus-agent.labels" . | nindent 4 }}
apiVersion: v1
data:
  agent.yaml: |
    metrics:
      wal_directory: /var/lib/agent/wal
      global:
        scrape_interval: 60s
        external_labels:
          {{- if .Values.cluster_name }}
          cluster: {{.Values.cluster_name}}
          {{- end }}
          {{- if .Values.environment }}
          environment: {{.Values.environment}}
          {{- end }}
      configs:
        - name: integrations
          remote_write:
            {{- range .Values.remote_write }}
            - url: {{ .url }}
              basic_auth:
                username: {{.basic_auth.username}}
                password: {{.basic_auth.password}}
            {{- end }}
          scrape_configs:
    {{- if .Values.monitor_kubernetes }}
            - job_name: integrations/kubernetes/cadvisor
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - replacement: kubernetes.default.svc:443
                  target_label: __address__
                - regex: (.+)
                  replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
                  source_labels:
                    - __meta_kubernetes_node_name
                  target_label: __metrics_path__
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes
            - job_name: integrations/kubernetes/kubelet
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - replacement: kubernetes.default.svc:443
                  target_label: __address__
                - regex: (.+)
                  replacement: /api/v1/nodes/$1/proxy/metrics
                  source_labels:
                    - __meta_kubernetes_node_name
                  target_label: __metrics_path__
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes
    {{- end }}
            - job_name: "kubernetes-pods"
              {{- if .Values.bearerAuth}}
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              {{- end }}
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                # Make Scheme configurable by setting prometheus.io/scheme
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
                  action: replace
                  target_label: __scheme__
                  regex: (https?)
                # Scrape metrics when the prometheus.io/scrape annotation has been set to true
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                # Allow us to overwrite the path with the content of prometheus.io/path
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                  # Allow us to overwrite the default path with the content of prometheus.io/port
                - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: ${1}:${2}
                  target_label: __address__
                # Expose Pod labels as metric labels
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                # Expose Pod namespace as metric namespace label
                - source_labels: [ __meta_kubernetes_namespace ]
                  action: replace
                  target_label: namespace
                # Expose Pod name as metric name label
                - source_labels: [ __meta_kubernetes_pod_name ]
                  action: replace
                  target_label: pod
                {{- if .Values.nameLabelOverride }}
                - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_{{.Values.nameLabelOverride}}]
                {{- else}}
                - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_name]
                {{- end}}
                  action: replace
                  separator: /
                  target_label: job
                  replacement: $1
              scheme: http
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes