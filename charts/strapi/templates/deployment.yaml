apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "strapi.fullname" . }}
  labels:
    {{- include "strapi.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
          {{- include "strapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "strapi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "strapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: strapi-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "strapi.fullname" .) }}
        {{- end }}
      {{- if ne .Value.initImage.tag "" }}
      initContainers:
        - name: "{{ .Chart.Name }}-db-init"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          env:
            - name: PGUSER 
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.root.username
            - name: PGPASSWORD 
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: database.root.password
            - name: PGDATABASE 
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.db_name
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.host
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.port
            - name: DATABASE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: database.password
            - name: DATABASE_SCHEMA
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.schema_name
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HOST
              value: {{ .Values.strapi.host }}
            - name: PORT
              value: "{{ .Values.service.port }}"
            - name: DATABASE_CLIENT
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.client
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.db_name
            - name: DATABASE_SCHEMA
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.schema_name
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.host
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.port
            - name: DATABASE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: database.username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: database.password
            - name: INIT_ADMIN_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: init_admin.enabled
            - name: INIT_ADMIN_USERNAME
              valueFrom:
                configMapKeyRef: 
                  name: strapi-db-config 
                  key: init_admin.username
            - name: INIT_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: init_admin.password
            - name: INIT_ADMIN_FIRSTNAME
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: init_admin.firstname
            - name: INIT_ADMIN_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: init_admin.email
            - name: S3_ENABLED
              value: "{{ .Values.s3.enabled }}"
            - name: S3_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: s3.endpoint
            - name: S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: s3.bucket
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: s3.access_key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: s3.secret_key
            - name: S3_REGION
              valueFrom:
                configMapKeyRef:
                  name: strapi-db-config
                  key: s3.region
            - name: APP_KEYS
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: app_keys
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: jwt_secret
            - name: ADMIN_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: admin_jwt_secret
            - name: API_TOKEN_SALT
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: api_token_salt
            - name: TRANSFER_TOKEN_SALT
              valueFrom:
                secretKeyRef:
                  name: strapi-secrets 
                  key: transfer_token_salt
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: strapi-data
              mountPath: /opt/public/uploads
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /admin
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
